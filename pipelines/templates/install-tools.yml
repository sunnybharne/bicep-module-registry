parameters:
  - name: displayNameAzCLI
    type: string
    default: 'Check and Install Az CLI'
  - name: displayNameAzPowerShell
    type: string
    default: 'Check and Install Az PowerShell'
  - name: displayNameDocker
    type: string
    default: 'Check and Install Docker'
  - name: displayNamePowerShell
    type: string
    default: 'Check and Install PowerShell'

steps:
  - script: |
      # Check if Azure CLI is installed
      if ! command -v az &> /dev/null; then
        echo "Azure CLI is not installed. Installing now..."
        sudo apt-get update
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
      else
        echo "Azure CLI is already installed."
      fi
    displayName: ${{ parameters.displayNameAzCLI }}

  - script: |
      # Check if Azure PowerShell (Az module) is installed
      if ! command -v az &> /dev/null; then
        echo "Azure PowerShell (Az module) is not installed. Installing now..."
        sudo apt-get update
        sudo apt-get install -y curl
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
        az extension add --name storage-preview
      else
        echo "Azure PowerShell (Az module) is already installed."
      fi
    displayName: ${{ parameters.displayNameAzPowerShell }}

  - script: |
      # Check if Docker is installed
      if ! command -v docker &> /dev/null; then
        echo "Docker is not installed. Installing now..."
        sudo apt-get update
        sudo apt-get install -y docker.io
        sudo systemctl start docker
        sudo systemctl enable docker
      else
        echo "Docker is already installed."
      fi
    displayName: ${{ parameters.displayNameDocker }}

  - script: |
      # Check if PowerShell is installed
      if ! command -v pwsh &> /dev/null; then
        echo "PowerShell is not installed. Installing now..."
        sudo apt-get update
        sudo apt-get install -y wget apt-transport-https software-properties-common
        wget -q "https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb"
        sudo dpkg -i packages-microsoft-prod.deb
        sudo apt-get update
        sudo apt-get install -y powershell
      else
        echo "PowerShell is already installed."
      fi
    displayName: ${{ parameters.displayNamePowerShell }}

  - script: |
      # Check if Az.Accounts module is installed with specific version
      if (!(Get-Module -ListAvailable -Name Az.Accounts -ErrorAction SilentlyContinue)) {
        echo "Az.Accounts module not found. Installing now..."
        Install-Module -Name Az.Accounts -Force -Scope CurrentUser -AllowClobber -RequiredVersion 2.2.0
      } else {
        $moduleVersion = (Get-Module -Name Az.Accounts -ListAvailable).Version
        echo "Az.Accounts module found. Version: $moduleVersion"
      }
    displayName: 'Check and Install Az.Accounts module'
